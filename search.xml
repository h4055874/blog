<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>文明上网实现正常访问google网站</title>
      <link href="/2020/04/02/06/"/>
      <url>/2020/04/02/06/</url>
      
        <content type="html"><![CDATA[<p>　　国内文明上网，实现正常访问Google网站</p><a id="more"></a><p>　　你们知道在国内为什么无法访问Google网站么？有兴趣的小伙伴可以百度搜索一下，我这里就不多说了<br>我们都知道，Google是搜索引擎界的大哥大，而我们在国内却无法使用，是不是感觉非常遗憾？在这里，我来告诉大家，<br>在国内，同样可以正常访问Google旗下的所有网站的方法：</p><h2 id="安装Chrome浏览器以及下载插件"><a href="#安装Chrome浏览器以及下载插件" class="headerlink" title="安装Chrome浏览器以及下载插件"></a>安装Chrome浏览器以及下载插件</h2><p>　　1、Chrome浏览器自行安装，这里不多说<br>　　2、其次，访问网站：<a href="https://chrome.zzzmh.cn/index" target="_blank" rel="noopener">https://chrome.zzzmh.cn/index</a><br>　　　　2.1、在网站首页右侧，点击：谷歌上网助手<span style="color:red">(图一)</span><br>　　　　2.2、点击后进入页面，在右侧有小贴士提示：<br>　　　　　　　请注意：本页面的版本原作者已停止更新，请点击跳转新版本 谷歌上网助手 Ghelper Beta<span style="color:red">(图二)</span><br>　　　　2.3、点击进入最新版本下载页面进行下载<span style="color:red">(图三)</span></p><h2 id="如图："><a href="#如图：" class="headerlink" title="如图："></a>如图：</h2><img src="/images/loading4.gif" data-original="https://gitee.com/tian_yu_ting/blog_img/raw/master/Google1.png" style="zoom:43%"><p align="center" style="color:blue">图一</p><img src="/images/loading4.gif" data-original="https://gitee.com/tian_yu_ting/blog_img/raw/master/Google2.png" style="zoom:50%"><p align="center" style="color:blue">图二</p><img src="/images/loading4.gif" data-original="https://gitee.com/tian_yu_ting/blog_img/raw/master/Google3.png" style="zoom:50%"><p align="center" style="color:blue">图三</p><h2 id="解压插件并进行安装使用"><a href="#解压插件并进行安装使用" class="headerlink" title="解压插件并进行安装使用"></a>解压插件并进行安装使用</h2><p>　　1、将下载好的插件进行解压<span style="color:red">(图四)</span>，目标文件：<span style="color:red">Ghelper Beta_2.1.2_chrome.zzzmh.cn.crx</span><br>　　2、将目标文件拖到Chrome浏览器的插件管理中，进行安装<span style="color:red">(图五)</span>;注意：需打开Chrome浏览器右上角的开发者模式<span style="color:red">(图六)</span><br>　　3、当插件拖进去安装时，会出现提示框<span style="color:red">(图七)</span>，然后这里选择点击添加扩展程序，到这里，该插件基本上已经OK了<br>　　4、安装好之后，点击浏览器网址输入框右侧新安装的插件图标<span style="color:red">(图八)</span>，这里需要注册登录，不需要购买VIP哦<br>　　5、到这里就结束了，你现在就可以正常的访问Google旗下的网址了，而且你会发现，Chrome浏览器访问网页的速度变快了很多</p><h2 id="如图"><a href="#如图" class="headerlink" title="如图:"></a>如图:</h2><img src="/images/loading4.gif" data-original="https://gitee.com/tian_yu_ting/blog_img/raw/master/Google4.png" style="zoom:70%"><p align="center" style="color:blue">图四</p><img src="/images/loading4.gif" data-original="https://gitee.com/tian_yu_ting/blog_img/raw/master/Google5.png" style="zoom:50%"><p align="center" style="color:blue">图五</p><img src="/images/loading4.gif" data-original="https://gitee.com/tian_yu_ting/blog_img/raw/master/Google6.png" style="zoom:64%"><p align="center" style="color:blue">图六</p><img src="/images/loading4.gif" data-original="https://gitee.com/tian_yu_ting/blog_img/raw/master/Google7.png" style="zoom:109%"><p align="center" style="color:blue">图七</p><img src="/images/loading4.gif" data-original="https://gitee.com/tian_yu_ting/blog_img/raw/master/Google8.png" style="zoom:102%"><p align="center" style="color:blue">图八</p>总结---<p>　　Chrome是一款非常好用的浏览器，它可以安装多种插件，已满足用户的各种需求，更多功能需要自行慢慢研究探索哦<br>　　本人在另一篇文章中有为大家介绍几款非常实用的插件，有兴趣的小伙伴可以<a href="https://www.onlyyu.cn/2020/04/02/07/" target="_blank" rel="noopener"">点击浏览</a>哦</p>]]></content>
      
      
      <categories>
          
          <category> Google </category>
          
          <category> chrome </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> chrome </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题如何将文章置顶</title>
      <link href="/2020/03/15/05/"/>
      <url>/2020/03/15/05/</url>
      
        <content type="html"><![CDATA[<p>　　想将写好的一些文章置顶，但是hexo好像默认不提供这个功能，希望以后的版本会有。</p><a id="more"></a><p>这里简单写一下实现hexo文章置顶功能</p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><p>　　找到node_modules/hexo-generator-index/lib/generator.js这个文件。<br>　　在代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> posts = locals.posts.sort(config.index_generator.order_by);</span><br></pre></td></tr></table></figure><p>　　下面添加以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 如果两篇文章top都有定义</span></span><br><span class="line"><span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 如果top值一样则按照文章日期降序排</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 如果只有一篇文章top有定义，那么将有top的排在前面</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">const</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">            <span class="keyword">const</span> posts = locals.posts.sort(config.index_generator.order_by);</span><br><span class="line"></span><br><span class="line">            posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">                                <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">                                <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">                                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">const</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">            <span class="keyword">const</span> path = config.index_generator.path || <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> pagination(path, posts, &#123;</span><br><span class="line">                perPage: config.index_generator.per_page,</span><br><span class="line">                layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">                format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    __index: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章名</span><br><span class="line">date: 文章发布时间</span><br><span class="line">tags: 文章标签</span><br><span class="line">top: 100(文章置顶)</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>　　迁移时，切莫忘记备份node_modules/hexo-generator-index/lib/generator.js这个文件</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo,文章置顶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何创建vue脚手架</title>
      <link href="/2020/03/13/04/"/>
      <url>/2020/03/13/04/</url>
      
        <content type="html"><![CDATA[<p>　　这是一篇教你如何设置国内源来快速安装Vue脚手架的教程</p><a id="more"></a><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>　　首先设置国内源，这样你的下载速度会非常快：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>　　查看源：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm<span class="built_in"> config </span>list</span><br></pre></td></tr></table></figure><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>　　首先要卸载原有的vue版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall vue-cli -g</span><br></pre></td></tr></table></figure><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>　　安装vue：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @vue/cli -g</span><br></pre></td></tr></table></figure><h2 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h2><p>　　创建项目前要先执行命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli-init</span><br></pre></td></tr></table></figure><p>　　执行完后再执行命令：(文件名自己取)</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack 文件名</span><br></pre></td></tr></table></figure><p>　　安装过程中一次提示如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">project name（项目名称）  <span class="comment"># 按回车</span></span><br><span class="line">project description（项目描述） <span class="comment"># 按回车</span></span><br><span class="line">author（作者） <span class="comment"># 按回车</span></span><br><span class="line">vue build（解释器） <span class="comment"># 按回车</span></span><br><span class="line">Install vue-router(路由) <span class="comment"># 按y按回车</span></span><br><span class="line">use aslantto lint your code(代码检查) <span class="comment"># 按n按回车</span></span><br><span class="line"><span class="built_in">set</span> up unit tests(测试模块) <span class="comment"># 按n按回车</span></span><br><span class="line">setup e2e tests with night watch(是否安装e2e) <span class="comment"># 按n按回车</span></span><br><span class="line">should we run ’npm install’(是否选择npm方式)<span class="comment"># 选第一个，按回车</span></span><br></pre></td></tr></table></figure><h2 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h2><p>　　运行完之后：<br>    　　cd 到项目中，可以安装一些常用的包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install axios --save</span><br><span class="line">npm install style-loader —-save</span><br><span class="line">npm install heyui --save</span><br><span class="line">npm install js-md5 --save</span><br></pre></td></tr></table></figure><p>　　安装完之后可以直接启动：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>　　退出服务：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl + <span class="keyword">c</span></span><br></pre></td></tr></table></figure><h2 id="第六步"><a href="#第六步" class="headerlink" title="第六步"></a>第六步</h2><p>　　　　如果出现任何关于node依赖的问题导致服务无法启动，执行npm install无法解决的，则安装rimraf,然后进入项目目录下，<br>　　执行rimraf node_modules 删除后，重新执行 npm install 安装依赖<br>　　安装rimraf：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> rimraf -g</span><br></pre></td></tr></table></figure><p>　　删除node_modules：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rimraf node_modules</span></span><br></pre></td></tr></table></figure><p>　　重新安装node_modules：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitee取消输入用户名及密码</title>
      <link href="/2020/03/13/03/"/>
      <url>/2020/03/13/03/</url>
      
        <content type="html"><![CDATA[<p>　　每次提交项目时，都会被要求输入用户名及密码，那么，我们应该如何跳过这一步骤呢？</p><a id="more"></a><p>本篇文章为您揭晓…</p><h2 id="第一步、查看通信方式"><a href="#第一步、查看通信方式" class="headerlink" title="第一步、查看通信方式"></a>第一步、查看通信方式</h2><p>　　在你的本地仓库中,打开命令窗口,执行以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>　　如果是：<br>　　　　origin  <a href="https://gitee.com/fortunamajor/um.git" target="_blank" rel="noopener">https://gitee.com/fortunamajor/um.git</a> (fetch)<br>　　　　origin  <a href="https://gitee.com/fortunamajor/um.git" target="_blank" rel="noopener">https://gitee.com/fortunamajor/um.git</a> (push)<br>　　则证明是https 通信，这样每次都会提示输入用户名和密码，然后我们将其修改为ssh绑定gitee仓库服务端</p><h2 id="第二步、通过以下命令删除原有origin的通信方式"><a href="#第二步、通过以下命令删除原有origin的通信方式" class="headerlink" title="第二步、通过以下命令删除原有origin的通信方式"></a>第二步、通过以下命令删除原有origin的通信方式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure><h2 id="第三步、重新add-，通过ssh绑定gitee仓库服务端"><a href="#第三步、重新add-，通过ssh绑定gitee仓库服务端" class="headerlink" title="第三步、重新add ，通过ssh绑定gitee仓库服务端"></a>第三步、重新add ，通过ssh绑定gitee仓库服务端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@gitee.com:USERNAME/UM.git</span><br></pre></td></tr></table></figure><p>　　username填写gitee户名，um.git 填写仓库名.git<br>　　若怕输错，也可以去仓库里【克隆/下载】的地方，直接复制SSH路由</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用命令</title>
      <link href="/2020/03/13/02/"/>
      <url>/2020/03/13/02/</url>
      
        <content type="html"><![CDATA[<p>　　Hexo是一款非常流行且好用的个人博客模板，下面我们一起来看一下Hexo的常用命令是什么吧……</p><a id="more"></a><h2 id="常见命令："><a href="#常见命令：" class="headerlink" title="常见命令："></a>常见命令：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo deploy <span class="comment">#部署到GitHub</span></span><br><span class="line">hexo <span class="built_in">help</span>  <span class="comment"># 查看帮助</span></span><br><span class="line">hexo version  <span class="comment">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure><h2 id="缩写："><a href="#缩写：" class="headerlink" title="缩写："></a>缩写：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><h2 id="组合命令："><a href="#组合命令：" class="headerlink" title="组合命令："></a>组合命令：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g <span class="comment">#生成并本地预览</span></span><br><span class="line">hexo d -g <span class="comment">#生成并上传</span></span><br></pre></td></tr></table></figure><h2 id="写博客："><a href="#写博客：" class="headerlink" title="写博客："></a>写博客：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">定位到我们的hexo根目录，执行命令：</span><br><span class="line">hexo new <span class="string">'my-first-blog'</span></span><br><span class="line">hexo会帮我们在`_posts`下生成相关md文件：</span><br><span class="line"><span class="comment"># 命令窗口中：</span></span><br><span class="line">F:\blog\hexo&gt;hexo new <span class="string">"my-first-blog"</span></span><br><span class="line">INFO  Created: F:\blog\hexo\<span class="built_in">source</span>\_posts\hexo常用命令-1.md</span><br></pre></td></tr></table></figure><p>　　我们只需要打开这个文件就可以开始写博客了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认生成如下内容：</span></span><br><span class="line">---</span><br><span class="line">title: my-first-blog</span><br><span class="line">date: 2013-12-02 15:30:16 </span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>　　当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一般完整格式如下：</span></span><br><span class="line">---</span><br><span class="line">title: postName <span class="comment">#文章页面上的显示名称，一般是中文</span></span><br><span class="line">date: 2013-12-02 15:30:16 <span class="comment">#文章生成时间，一般不改，当然也可以任意修改</span></span><br><span class="line">categories: 默认分类 <span class="comment">#分类</span></span><br><span class="line">tags: [tag1,tag2,tag3] <span class="comment">#文章标签，可空，多标签请用格式，注意:后面有个空格</span></span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub访问及clone缓慢的方法</title>
      <link href="/2020/03/12/01/"/>
      <url>/2020/03/12/01/</url>
      
        <content type="html"><![CDATA[<p>　　你们在访问GitHub网站时有没有出现加载缓慢，甚至加载失败的情况呢？</p><a id="more"></a><p>那么，这种情况该如何杜绝呢？请继续往下阅读……</p><h2 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h2><p>　　点击访问网址：<a href="https://www.ipaddress.com/" target="_blank" rel="noopener">https://www.ipaddress.com/</a><br>　　在该网址中搜索：<br>　　　　github.global.ssl.fastly.net<br>　　　　github.com<br>　　得到相应的ip地址<span style="color:red">(如图一，图二)</span></p><h2 id="如图"><a href="#如图" class="headerlink" title="如图:"></a>如图:</h2><img src="/images/loading4.gif" data-original="http://q72tcv6j6.bkt.clouddn.com/GitHub%E8%AE%BF%E9%97%AE%E5%8F%8Aclone%E7%BC%93%E6%85%A2%E7%9A%84%E6%96%B9%E6%B3%951.png" style="zoom:67%;" /><p style="color:blue;text-align:center">图一</p><img src="/images/loading4.gif" data-original="http://q72tcv6j6.bkt.clouddn.com/GitHub%E8%AE%BF%E9%97%AE%E5%8F%8Aclone%E7%BC%93%E6%85%A2%E7%9A%84%E6%96%B9%E6%B3%952.png" style="zoom:67%;" /><p style="color:blue;text-align:center">图二</p>第二步：---<p>　　找到个人电脑中的hosts文件，此文件在每个电脑上的路径基本上是一致的：C:\Windows\System32\drivers\etc<br>　　打开后将获取到的ip地址及网址添加到posts文件的最下面，保存后退出<br>　　例如：<br>　　　　151.101.185.194 github.global-ssl.fastly.net<br>　　　　192.30.253.112 github.com<br>　　注意：<br>　　　　因此文件在系统目录中，所以无法直接保存，可将posts文件复制到桌面进行修改<br>　　　　修改完成后粘贴到C:\Windows\System32\drivers\etc目录中进行取代之前的posts文件</p><h2 id="第三步："><a href="#第三步：" class="headerlink" title="第三步："></a>第三步：</h2><p>　　当第二步完成后，我们需要更新DNS<br>　　Winodws系统的做法：打开CMD，输入ipconfig /flushdns<br>　　Linux的做法：在终端输入sudo /etc/init.d/networking restart</p><h2 id="另："><a href="#另：" class="headerlink" title="另："></a>另：</h2><p>　　如果添加上面两条ip后无任何作用，可复制以下内容添加到posts文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">151.101.44.249 github.global.ssl.fastly.net</span><br><span class="line">192.30.253.113 github.com</span><br><span class="line">103.245.222.133 assets-cdn.github.com</span><br><span class="line">23.235.47.133 assets-cdn.github.com</span><br><span class="line">203.208.39.104 assets-cdn.github.com</span><br><span class="line">204.232.175.78 documentcloud.github.com</span><br><span class="line">204.232.175.94 gist.github.com</span><br><span class="line">107.21.116.220 help.github.com</span><br><span class="line">207.97.227.252 nodeload.github.com</span><br><span class="line">199.27.76.130 raw.github.com</span><br><span class="line">107.22.3.110 status.github.com</span><br><span class="line">204.232.175.78 training.github.com</span><br><span class="line">207.97.227.243 www.github.com</span><br><span class="line">185.31.16.184 github.global.ssl.fastly.net</span><br><span class="line">185.31.18.133 avatars0.githubusercontent.com</span><br><span class="line">185.31.19.133 avatars1.githubusercontent.com</span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>　　只要脑子不滑坡，办法总比困难多，祝各位机友越学越年轻，都能有自己满意的成果<br>　　如果感觉麻烦，或者不想修改电脑C盘中的文件，则可以参考我的另一篇文章来实现快速访问<a href="https://www.onlyyu.cn/2020/04/02/07/" target="_blank" rel="noopener">点击这里阅读</a></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
